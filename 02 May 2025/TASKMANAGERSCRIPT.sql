USE [master]
GO
/****** Object:  Database [TASKMANAGER]    Script Date: 5/3/2025 2:09:18 PM ******/
CREATE DATABASE [TASKMANAGER]
 CONTAINMENT = NONE
 ON  PRIMARY 
( NAME = N'TASKMANAGER', FILENAME = N'C:\Users\nandhakumar.s\Downloads\02 May 2025\TASKMANAGER.mdf' , SIZE = 8192KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )
 LOG ON 
( NAME = N'TASKMANAGER_log', FILENAME = N'C:\Users\nandhakumar.s\Downloads\02 May 2025\TASKMANAGER_log.ldf' , SIZE = 8192KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )
 WITH CATALOG_COLLATION = DATABASE_DEFAULT
GO
ALTER DATABASE [TASKMANAGER] SET COMPATIBILITY_LEVEL = 150
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [TASKMANAGER].[dbo].[sp_fulltext_database] @action = 'enable'
end
GO
ALTER DATABASE [TASKMANAGER] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [TASKMANAGER] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [TASKMANAGER] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [TASKMANAGER] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [TASKMANAGER] SET ARITHABORT OFF 
GO
ALTER DATABASE [TASKMANAGER] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [TASKMANAGER] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [TASKMANAGER] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [TASKMANAGER] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [TASKMANAGER] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [TASKMANAGER] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [TASKMANAGER] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [TASKMANAGER] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [TASKMANAGER] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [TASKMANAGER] SET  ENABLE_BROKER 
GO
ALTER DATABASE [TASKMANAGER] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [TASKMANAGER] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [TASKMANAGER] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [TASKMANAGER] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [TASKMANAGER] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [TASKMANAGER] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [TASKMANAGER] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [TASKMANAGER] SET RECOVERY FULL 
GO
ALTER DATABASE [TASKMANAGER] SET  MULTI_USER 
GO
ALTER DATABASE [TASKMANAGER] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [TASKMANAGER] SET DB_CHAINING OFF 
GO
ALTER DATABASE [TASKMANAGER] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) 
GO
ALTER DATABASE [TASKMANAGER] SET TARGET_RECOVERY_TIME = 60 SECONDS 
GO
ALTER DATABASE [TASKMANAGER] SET DELAYED_DURABILITY = DISABLED 
GO
ALTER DATABASE [TASKMANAGER] SET ACCELERATED_DATABASE_RECOVERY = OFF  
GO
EXEC sys.sp_db_vardecimal_storage_format N'TASKMANAGER', N'ON'
GO
ALTER DATABASE [TASKMANAGER] SET QUERY_STORE = OFF
GO
USE [TASKMANAGER]
GO
/****** Object:  Table [dbo].[Comment]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Comment](
	[CommentId] [bigint] IDENTITY(1,1) NOT NULL,
	[Title] [nvarchar](30) NOT NULL,
	[ParentTaskId] [bigint] NOT NULL,
	[TaskDescription] [nvarchar](30) NULL,
	[CommentBy] [bigint] NOT NULL,
	[CommentDate] [date] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[CommentId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Project]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Project](
	[ProjectId] [bigint] IDENTITY(1,1) NOT NULL,
	[Title] [nvarchar](60) NOT NULL,
	[Descriptions] [nvarchar](300) NULL,
	[StartDate] [date] NOT NULL,
	[EndDate] [date] NULL,
	[PM] [bigint] NOT NULL,
 CONSTRAINT [PK__Project__761ABEF09551299A] PRIMARY KEY CLUSTERED 
(
	[ProjectId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ__Project__2CB664DC0F559C3E] UNIQUE NONCLUSTERED 
(
	[Title] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[ProjectMember]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[ProjectMember](
	[MemberId] [bigint] IDENTITY(1,1) NOT NULL,
	[UserId] [bigint] NOT NULL,
	[ProjectId] [bigint] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[MemberId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Roles]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Roles](
	[RoleId] [bigint] IDENTITY(1,1) NOT NULL,
	[RoleName] [nvarchar](30) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[RoleId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
UNIQUE NONCLUSTERED 
(
	[RoleName] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[Task]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[Task](
	[TaskId] [bigint] IDENTITY(1,1) NOT NULL,
	[TaskTitle] [nvarchar](30) NOT NULL,
	[Descriptions] [nvarchar](300) NULL,
	[AssignedTo] [bigint] NOT NULL,
	[TaskType] [nvarchar](30) NOT NULL,
	[StartDate] [date] NULL,
	[EndDate] [date] NULL,
	[TaskStatus] [bigint] NOT NULL,
	[ProjectId] [bigint] NULL,
PRIMARY KEY CLUSTERED 
(
	[TaskId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TaskTypeMaster]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TaskTypeMaster](
	[TaskTypeId] [bigint] IDENTITY(1,1) NOT NULL,
	[TaskStatus] [nvarchar](30) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[TaskTypeId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[UserInfo]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserInfo](
	[UserId] [bigint] NOT NULL,
	[Username] [nvarchar](30) NULL,
	[RoleId] [bigint] NOT NULL,
	[Email] [nvarchar](30) NOT NULL,
	[Passwords] [nvarchar](30) NOT NULL,
	[Phone] [bigint] NOT NULL,
 CONSTRAINT [PK__UserInfo__1788CC4C9DED9052] PRIMARY KEY CLUSTERED 
(
	[UserId] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [UQ__UserInfo__A9D105346C9CCB86] UNIQUE NONCLUSTERED 
(
	[Email] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [dbo].[Comment]  WITH CHECK ADD FOREIGN KEY([CommentBy])
REFERENCES [dbo].[ProjectMember] ([MemberId])
GO
ALTER TABLE [dbo].[Comment]  WITH CHECK ADD FOREIGN KEY([ParentTaskId])
REFERENCES [dbo].[Task] ([TaskId])
GO
ALTER TABLE [dbo].[ProjectMember]  WITH CHECK ADD  CONSTRAINT [FK__ProjectMe__Proje__3A81B327] FOREIGN KEY([ProjectId])
REFERENCES [dbo].[Project] ([ProjectId])
GO
ALTER TABLE [dbo].[ProjectMember] CHECK CONSTRAINT [FK__ProjectMe__Proje__3A81B327]
GO
ALTER TABLE [dbo].[ProjectMember]  WITH CHECK ADD FOREIGN KEY([UserId])
REFERENCES [dbo].[UserInfo] ([UserId])
GO
ALTER TABLE [dbo].[Task]  WITH CHECK ADD FOREIGN KEY([AssignedTo])
REFERENCES [dbo].[ProjectMember] ([MemberId])
GO
ALTER TABLE [dbo].[Task]  WITH CHECK ADD FOREIGN KEY([TaskStatus])
REFERENCES [dbo].[TaskTypeMaster] ([TaskTypeId])
GO
ALTER TABLE [dbo].[Task]  WITH CHECK ADD  CONSTRAINT [FK_Task_Project] FOREIGN KEY([ProjectId])
REFERENCES [dbo].[Project] ([ProjectId])
GO
ALTER TABLE [dbo].[Task] CHECK CONSTRAINT [FK_Task_Project]
GO
ALTER TABLE [dbo].[UserInfo]  WITH CHECK ADD  CONSTRAINT [FK__UserInfo__RoleId__2D27B809] FOREIGN KEY([RoleId])
REFERENCES [dbo].[Roles] ([RoleId])
GO
ALTER TABLE [dbo].[UserInfo] CHECK CONSTRAINT [FK__UserInfo__RoleId__2D27B809]
GO
/****** Object:  StoredProcedure [dbo].[ADDNEWUSER]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create PROC [dbo].[ADDNEWUSER]
@ID BIGINT,
@NAME NVARCHAR(50),
@ROLEID BIGINT,
@EMAIL NVARCHAR(50),
@PASSWORDS NVARCHAR(50),
@PHONE BIGINT
AS
INSERT INTO UserInfo(UserId,[Username],RoleId,Email,Passwords,Phone)
VALUES (@ID,@NAME,@ROLEID,@EMAIL,@PASSWORDS,@PHONE)
GO
/****** Object:  StoredProcedure [dbo].[ADDPROJECT]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [dbo].[ADDPROJECT]
@TITLE NVARCHAR(50),
@DES NVARCHAR(50),
@STARTD DATE,
@ENDD DATE,
@PM BIGINT
AS
BEGIN
DECLARE @NEW_PROJID BIGINT=0
BEGIN TRANSACTION
BEGIN TRY 
IF EXISTS(SELECT * FROM UserInfo WHERE UserId=@PM AND RoleId=4)
THROW 5001,'USER IS NOT IN PM ROLE',1
INSERT INTO Project(Title,Descriptions,StartDate,EndDate)
VALUES(@TITLE,@DES,@STARTD,@ENDD)
SET @NEW_PROJID=SCOPE_IDENTITY()
PRINT @NEW_PROJID
INSERT INTO ProjectMember(ProjectId,UserId)
VALUES(@NEW_PROJID,@PM)
COMMIT TRANSACTION
END TRY
BEGIN CATCH 
ROLLBACK TRANSACTION
END CATCH
END
GO
/****** Object:  StoredProcedure [dbo].[ADDPROJECTMEMBER]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[ADDPROJECTMEMBER]
@PROID BIGINT,
@USERID BIGINT
AS
BEGIN 
INSERT INTO ProjectMember(ProjectId,UserId)
VALUES (@PROID,@USERID)
END
GO
/****** Object:  StoredProcedure [dbo].[ADDTASKNEW]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[ADDTASKNEW]
@TASKTITLE NVARCHAR(50),
@DES NVARCHAR(50),
@MEMBER BIGINT,
@TASKTYPE NVARCHAR(50),
@STARTDATE DATE,
@ENDDATE DATE,
@TASKSTATUS BIGINT,
@PROJECTID BIGINT
AS
BEGIN
INSERT INTO Task(TaskTitle,Descriptions,AssignedTo,TaskType,StartDate,EndDate,TaskStatus,ProjectId)
VALUES (@TASKTITLE, @DES, @MEMBER, @TASKTYPE, @STARTDATE, @ENDDATE, @TASKSTATUS, @PROJECTID);
END
GO
/****** Object:  StoredProcedure [dbo].[DELETEUSER]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[DELETEUSER]
@USERID BIGINT
AS
DELETE[DBO].[UserInfo]
WHERE UserId=@USERID
GO
/****** Object:  StoredProcedure [dbo].[GETALLROLES]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GETALLROLES]
AS
SELECT U.*,R.RoleName FROM UserInfo U
JOIN Roles R ON U.RoleId = R.RoleId
GO
/****** Object:  StoredProcedure [dbo].[GETALLUSERS]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GETALLUSERS]
AS
BEGIN
SELECT * FROM UserInfo
END
GO
/****** Object:  StoredProcedure [dbo].[GETPMS]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GETPMS]
AS 
SELECT * FROM UserInfo
WHERE RoleId=4
GO
/****** Object:  StoredProcedure [dbo].[GETPROJECTMEMBERS]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE proc [dbo].[GETPROJECTMEMBERS]
@PROID BIGINT
AS BEGIN
SELECT U.*,R.* FROM ProjectMember P
JOIN Project PR ON P.ProjectId = PR.ProjectId
JOIN UserInfo U ON P.UserId = U.UserId
JOIN Roles R ON U.RoleId=R.RoleId
WHERE P.ProjectId = @PROID
END
GO
/****** Object:  StoredProcedure [dbo].[GETPROJECTS]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[GETPROJECTS]
@USERID BIGINT
AS
BEGIN
SELECT * FROM Project P
JOIN ProjectMember PM ON P.ProjectId = PM.ProjectId
WHERE PM.UserId=@USERID
END
GO
/****** Object:  StoredProcedure [dbo].[GETUSERBYEMAIL]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
--CREATE PROC GETALLROLES
--AS
--BEGIN
--SELECT * FROM Roles
--END
--EXEC GETALLROLES
--create PROC ADDNEWUSER
--@NAME NVARCHAR(50),
--@ROLEID BIGINT,
--@EMAIL NVARCHAR(50),
--@PASSWORDS NVARCHAR(50),
--@PHONE BIGINT
--AS
--INSERT INTO UserInfo([Username],RoleId,Email,Passwords,Phone)
--VALUES (@NAME,@ROLEID,@EMAIL,@PASSWORDS,@PHONE)

--CREATE PROC DELETEUSER
--@USERID BIGINT
--AS
--DELETE[DBO].[UserInfo]
--WHERE UserId=@USERID



CREATE PROC [dbo].[GETUSERBYEMAIL]
@EMAIL NVARCHAR(50)
AS
SELECT * FROM UserInfo
WHERE Email=@EMAIL
GO
/****** Object:  StoredProcedure [dbo].[GETUSERSBYROLE]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create	proc [dbo].[GETUSERSBYROLE]
@ROLENAME NVARCHAR(50)
AS BEGIN
SELECT * FROM UserInfo U
JOIN Roles R ON U.RoleId=R.RoleId
WHERE R.RoleName=@ROLENAME
END
GO
/****** Object:  StoredProcedure [dbo].[REMOVEPROMEMBER]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[REMOVEPROMEMBER]
@MEMBERID BIGINT
AS
BEGIN
    -- Check if the specific user has RoleId = 4
    IF NOT EXISTS (
        SELECT 1 FROM ProjectMember P
        JOIN UserInfo U ON P.UserId = U.UserId
        WHERE P.MemberId = @MEMBERID AND U.RoleId = 4
    )
    BEGIN
        -- If user is not in PM role, delete them
        DELETE FROM ProjectMember WHERE MemberId = @MEMBERID;
    END
    ELSE
    BEGIN
        -- If user is in PM role, raise an error
        THROW 50002, 'MEMBER IS IN PM ROLE', 1;
    END
END;
GO
/****** Object:  StoredProcedure [dbo].[VALIDATEUSER]    Script Date: 5/3/2025 2:09:18 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROC [dbo].[VALIDATEUSER]
@EMAIL NVARCHAR(50),
@PASSWORD NVARCHAR(50)
AS
SELECT * FROM UserInfo
WHERE Email=@EMAIL  AND Passwords=@PASSWORD
GO
USE [master]
GO
ALTER DATABASE [TASKMANAGER] SET  READ_WRITE 
GO